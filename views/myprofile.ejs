<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        .editable {
            cursor: pointer;
            transition: color 0.3s;
        }
        
        .editable:hover {
            color: #3b82f6; /* Change color on hover */
        }

        .profile-pic {
            object-fit: cover;
            transition: transform 0.2s;
        }

        .profile-pic:hover {
            transform: scale(1.1); /* Zoom effect on hover */
        }

        .edit-button {
            transition: background-color 0.3s, transform 0.2s;
        }

        .edit-button:hover {
            background-color: #3b82f6; /* Change background on hover */
            transform: scale(1.05); /* Slight grow effect */
        }

        .container {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
        }
    </style>
</head>

<body class="bg-white text-black h-screen w-full">
    <div class="container mx-auto p-5 rounded-lg w-full  h-full">
        <a href="/profile" class="text-blue-700 hover:underline mb-4 inline-block font-bold">
            &larr; Back 
        </a>
        <div class="bg-blue-200 p-6 rounded-lg shadow-lg w-full h-full">
            <h1 class="text-3xl font-bold text-black mb-6 text-center">My Profile</h1>

            <!-- Profile Picture Section -->
            <div class="mb-4 flex flex-col items-center justify-center w-full  gap-2">
                <div class=" w-24 h-24 rounded-full overflow-hidden border-4 border-yellow-600 mb-2">
                    <img class="profile-pic w-full h-full" src="data:image/png;base64,<%= user.profilepic %>" alt="Profile Picture" id="profile-pic">
                </div>
                <div class="relative w-48 text-center">
                    <label for="profile-pic-input" class="cursor-pointer bg-yellow-600 mb-4 text-white font-semibold py-2 px-4 rounded-full shadow hover:bg-yellow-600 focus:ring-2 focus:ring-yellow-400 focus:outline-none transition duration-300 ease-in-out">
                        Upload Profile Picture
                    </label>
                    <input type="file" accept="image/*" id="profile-pic-input" class="hidden" />
                </div>
                
            </div>

            <!-- Editable Fields Section -->
            <div class="space-y-6">

                <!-- Name Field -->
                <div class="mb-4">
                    <div class="flex items-center">
                        <p class="text-xl font-semibold w-32">
                            Name:
                        </p>
                        <span class="editable border border-black rounded-md p-2 ml-4 text-gray-700 w-2/3" id="editable-name-display">
                            <%= user.name %>
                        </span>
                        <button class="edit-button ml-4 bg-yellow-500 text-white rounded-md px-4 py-2 border border-yellow-500 hover:bg-yellow-600 transition" id="edit-name-button">
                            Edit
                        </button>
                    </div>

                    <!-- Hidden Name Edit Section -->
                    <div id="name-edit-section" class="hidden space-y-4 mt-4">
                        <input type="text" id="new-name" class="block w-full border border-gray-300 rounded-md p-2" value="<%= user.name %>" placeholder="New Name" />

                        <div class="flex justify-end space-x-4">
                            <button id="cancel-name-edit" class="bg-gray-500 text-white rounded-md px-4 py-2 border border-gray-500 hover:bg-gray-600 transition">
                                Cancel
                            </button>
                            <button id="confirm-name-edit" class="bg-green-500 text-white rounded-md px-4 py-2 border border-green-500 hover:bg-green-600 transition">
                                Confirm
                            </button>
                        </div>
                    </div>
                </div>

            
                <!-- Username Field -->
                <div class="mb-4">
                    <div class="flex items-center">
                        <p class="text-xl font-semibold w-32">
                            Username:
                        </p>
                        <span class="editable border border-black text-zinc-500 rounded-md p-2 ml-4 text-gray-700 w-2/3" id="editable-username-display">
                            <%= user.username %>
                        </span>
                        
                    </div>
            
                </div>
            
                <!-- Email Field -->
                <div class="mb-4">
                    <div class="flex items-center">
                        <p class="text-xl font-semibold w-32">
                            Email:
                        </p>
                        <span class="editable border border-black text-zinc-500 rounded-md p-2 ml-4 text-gray-700 w-2/3" id="editable-email-display">
                            <%= user.email %>
                        </span>
                        
                    </div>
            
                </div>
            
                <!-- Password Field (already handled) -->
                <div class="mb-4">
                    <div class="flex items-center">
                        <p class="text-xl font-semibold w-32">
                            Password:
                        </p>
                        <span class="editable border border-black rounded-md p-2 ml-4 text-gray-700 w-2/3" id="password-display">
                            ********
                        </span>
                        <button id="edit-password-button" class="ml-4 bg-yellow-500 text-white rounded-md px-4 py-2 border border-yellow-500 hover:bg-yellow-600 transition">
                            Edit
                        </button>
                    </div>
            
                    <!-- Hidden Password Edit Section -->
                    <div id="password-edit-section" class="hidden space-y-4 mt-4 w-2/3 ml-auto">
                        <input type="password" id="new-password" class="block w-full border border-gray-300 rounded-md p-2" placeholder="New Password" />
                        <input type="password" id="retype-new-password" class="block w-full border border-gray-300 rounded-md p-2" placeholder="Retype New Password" />
            
                        <div class="flex justify-end space-x-4">
                            <button id="cancel-password-edit" class="bg-gray-500 text-white rounded-md px-4 py-2 border border-gray-500 hover:bg-gray-600 transition">
                                Cancel
                            </button>
                            <button id="confirm-password-edit" class="bg-green-500 text-white rounded-md px-4 py-2 border border-green-500 hover:bg-green-600 transition">
                                Confirm
                            </button>
                        </div>
                    </div>
                </div>
            
                <!-- Age Field -->
                <div class="mb-4">
                    <div class="flex items-center">
                        <p class="text-xl font-semibold w-32">
                            Age:
                        </p>
                        <span class="editable border border-black rounded-md p-2 ml-4 text-gray-700 w-2/3" id="editable-age-display">
                            <%= user.age || 'N/A' %> <!-- Display 'N/A' if age is not set -->
                        </span>
                        <button class="edit-button ml-4 bg-yellow-500 text-white rounded-md px-4 py-2 border border-yellow-500 hover:bg-yellow-600 transition" id="edit-age-button">
                            Edit
                        </button>
                    </div>

                    <!-- Hidden Age Edit Section -->
                    <div id="age-edit-section" class="hidden space-y-4 mt-4">
                        <input type="number" id="new-age" class="block w-full border border-gray-300 rounded-md p-2" value="<%= user.age %>" placeholder="New Age" />

                        <div class="flex justify-end space-x-4">
                            <button id="cancel-age-edit" class="bg-gray-500 text-white rounded-md px-4 py-2 border border-gray-500 hover:bg-gray-600 transition">
                                Cancel
                            </button>
                            <button id="confirm-age-edit" class="bg-green-500 text-white rounded-md px-4 py-2 border border-green-500 hover:bg-green-600 transition">
                                Confirm
                            </button>
                        </div>
                    </div>
                </div>

            
            </div>
            
            
            
        </div>
    </div>

    <!-- External Script for Inline Editing -->
    <script>
        document.querySelectorAll('.edit-button').forEach(function (button) {
            button.addEventListener('click', function () {
                const field = button.getAttribute('data-field');
                const editableElement = document.getElementById(`editable-${field}`);
                const currentText = editableElement.innerText;

                // Create input field for editing
                const input = document.createElement('input');
                input.type = 'text';
                input.value = currentText;
                input.className = 'bg-zinc-500 text-white border border-zinc-600 rounded-md p-2';

                editableElement.replaceWith(input);
                input.focus();

                // Save new value on Enter key press
                input.addEventListener('keydown', function (event) {
                    if (event.key === 'Enter') {
                        const newText = input.value;
                        editableElement.innerText = newText;
                        input.replaceWith(editableElement);
                        updateField(field, newText); // Send AJAX request
                    }
                });

                // Handle blur event (focus loss)
                input.addEventListener('blur', function () {
                    const newText = input.value;
                    editableElement.innerText = newText;
                    input.replaceWith(editableElement);
                    updateField(field, newText); // Send AJAX request
                });
            });
        });

        // Update field with AJAX
        function updateField(field, value) {
            fetch(`/updateprofile`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ field, value })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log(`${field} updated successfully.`);
                }
            });
        }

        // Profile Picture Update
        document.getElementById('profile-pic-input').addEventListener('change', function () {
            const formData = new FormData();
            formData.append('image', this.files[0]);

            fetch('/uploadprofilepic', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Set the profile picture to the Base64 string
                    document.getElementById('profile-pic').src = `data:image/png;base64,${data.image}`;
                }
            });
        });





    const editPasswordButton = document.getElementById('edit-password-button');
    const passwordDisplay = document.getElementById('password-display');
    const passwordEditSection = document.getElementById('password-edit-section');
    const cancelPasswordEdit = document.getElementById('cancel-password-edit');
    const confirmPasswordEdit = document.getElementById('confirm-password-edit');

    editPasswordButton.addEventListener('click', () => {
        passwordDisplay.classList.add('hidden');
        editPasswordButton.classList.add('hidden');
        passwordEditSection.classList.remove('hidden');
    });

    // Handling the Cancel button to revert to display mode
    cancelPasswordEdit.addEventListener('click', () => {
        passwordDisplay.classList.remove('hidden');
        editPasswordButton.classList.remove('hidden');
        passwordEditSection.classList.add('hidden');
    });

    // Handling the Confirm button click
    confirmPasswordEdit.addEventListener('click', () => {
        const newPassword = document.getElementById('new-password').value;
        const retypeNewPassword = document.getElementById('retype-new-password').value;

        if (newPassword.length <= 3) {
            alert('Password is too short. Please set atleast 8 characters.');

        }
        else if (newPassword === retypeNewPassword) {
            // TODO: Call the backend to update the password (encrypted)
            fetch('/updatepassword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ password: newPassword })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {

                alert("Password updated successfully");
            // After saving, revert to display mode
            passwordDisplay.classList.remove('hidden');
            editPasswordButton.classList.remove('hidden');
            passwordEditSection.classList.add('hidden');
        } 
        else {
                alert('Error updating password.');
            }
        });
    } else {
            alert('Passwords do not match.');
        }
    });



    // Name Field Editing
const editNameButton = document.getElementById('edit-name-button');
const nameDisplay = document.getElementById('editable-name-display');
const nameEditSection = document.getElementById('name-edit-section');
const cancelNameEdit = document.getElementById('cancel-name-edit');
const confirmNameEdit = document.getElementById('confirm-name-edit');

// Show the name edit input when "Edit" is clicked
editNameButton.addEventListener('click', () => {
    nameDisplay.classList.add('hidden');
    editNameButton.classList.add('hidden');
    nameEditSection.classList.remove('hidden');
});

// Cancel name edit
cancelNameEdit.addEventListener('click', () => {
    nameDisplay.classList.remove('hidden');
    editNameButton.classList.remove('hidden');
    nameEditSection.classList.add('hidden');
});

// Confirm name edit
confirmNameEdit.addEventListener('click', () => {
    const newName = document.getElementById('new-name').value;

    if (newName.length > 0) {
        nameDisplay.innerText = newName;

        // TODO: Call the backend to save the new name
        updateField('name', newName);

        nameDisplay.classList.remove('hidden');
        editNameButton.classList.remove('hidden');
        nameEditSection.classList.add('hidden');
    } else {
        alert('Name cannot be empty');
    }
});

// Age Field Editing
const editAgeButton = document.getElementById('edit-age-button');
const ageDisplay = document.getElementById('editable-age-display');
const ageEditSection = document.getElementById('age-edit-section');
const cancelAgeEdit = document.getElementById('cancel-age-edit');
const confirmAgeEdit = document.getElementById('confirm-age-edit');

// Show the age edit input when "Edit" is clicked
editAgeButton.addEventListener('click', () => {
    ageDisplay.classList.add('hidden');
    editAgeButton.classList.add('hidden');
    ageEditSection.classList.remove('hidden');
});

// Cancel age edit
cancelAgeEdit.addEventListener('click', () => {
    ageDisplay.classList.remove('hidden');
    editAgeButton.classList.remove('hidden');
    ageEditSection.classList.add('hidden');
});

// Confirm age edit
confirmAgeEdit.addEventListener('click', () => {
    const newAge = document.getElementById('new-age').value;

    if (newAge > 0 && newAge < 200) {
        ageDisplay.innerText = newAge;

        // TODO: Call the backend to save the new age
        updateField('age', newAge);

        ageDisplay.classList.remove('hidden');
        editAgeButton.classList.remove('hidden');
        ageEditSection.classList.add('hidden');
    } else {
        alert('Please enter a valid age.');
    }
});

// Common Update Field Function for AJAX
function updateField(field, value) {
    fetch(`/updateprofile`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ field, value })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log(`${field} updated successfully.`);
        }
    });
}


    </script>
</body>

</html>
