<!-- chat.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat with <%= user.name %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js" integrity="sha512-... (integrity value)" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        body {
            overflow: hidden; /* Prevent scrolling */
        }
        .chat-container {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
        }
        .chat-header {
            background-color: rgba(0, 0, 0, 0.7);
            padding: 15px;
            text-align: center;
        }
        .chat-box {
            flex: 1;
            overflow-y: auto; /* Allow vertical scrolling for messages */
            padding: 10px;
            background-color: rgba(0, 0, 0, 0.5);
        }
        .message-form {
            background-color: rgba(0, 0, 0, 0.7);
            padding: 10px;
            display: flex;
            gap: 10px;
        }
        .bokeh {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: linear-gradient(to bottom, #3b89f6, #4aa1f3, #3b82f6);
            background-size: 100% 300px;
            background-position: 0% 100%;
        }

        .bokeh-circle {
            position: absolute;
            border-radius: 50%;
            background-color: #ffffff;
            opacity: 0.2;
            animation: bokehAnimation 10s infinite;
        }

        .bokeh-circle-1 {
            top: 20%;
            left: 30%;
            width: 100px;
            height: 100px;
        }

        .bokeh-circle-2 {
            top: 50%;
            left: 50%;
            width: 150px;
            height: 150px;
        }

        .bokeh-circle-3 {
            top: 70%;
            left: 20%;
            width: 200px;
            height: 200px;
        }

        .bokeh-circle-4 {
            top: 10%;
            left: 70%;
            width: 125px;
            height: 125px;
        }

        @keyframes bokehAnimation {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.2);
            }
            100% {
                transform: scale(1);
            }
        }
        
    </style>
</head>
<body class="bokeh text-white min-h-screen">
   <div >
        <div class="bokeh-circle bokeh-circle-1"></div>
        <div class="bokeh-circle bokeh-circle-2"></div>
        <div class="bokeh-circle bokeh-circle-3"></div>
        <div class="bokeh-circle bokeh-circle-4"></div>
    <div class="chat-container">
        <!-- Chat Header -->
        <div class="chat-header">
            <h1 class="text-2xl font-bold text-white">Chat with <%= friend.name  %> </h1>
        </div>

        <!-- Chat Box -->
        <div class="chat-box">
            <% messages.forEach(function(message) { %>
                <div class="message mb-2">
                    <strong><%= message.sender.name %>:</strong> <span><%= message.content %></span>
                </div>
            <% }) %>
        </div>

        <!-- Message Form -->
        <form class="message-form">
            <input type="text" name="message" class="flex-1 p-2 rounded-md bg-zinc-800 border-2 border-zinc-600 placeholder-zinc-500 text-white" placeholder="Type your message..." required>
            <input type="hidden" name="friendId" value="<%= friend._id %>">
            <input type="submit" value="Send" class="bg-blue-800 hover:bg-blue-700 text-white font-semibold rounded-md px-4 py-2">
        </form>
    </div>
    </div>

    <script>
// Client-side code
const socket = io('<%= serverURL %>', {
  query: {
    friendId: '<%= friend._id %>' // Replace with the actual friendId
  }
});

// Define roomId once
const userId = '<%= user._id %>'; // Ensure these values are passed from the server
const userName = '<%= user.name %>';
const friendId = '<%= friend._id %>';
const roomId = [friendId, userId].sort().join('-');

// Join the room on page load
socket.emit('join', roomId);

// Handle incoming messages
socket.on('message', (message) => {
    console.log('Received message:', message);
    const chatBox = document.querySelector('.chat-box');
    const messageElement = document.createElement('div');
    messageElement.classList.add('message', 'mb-2');
    messageElement.innerHTML = `<strong>${message.sender}:</strong> <span>${message.content}</span>`;
    chatBox.appendChild(messageElement);
    chatBox.scrollTop = chatBox.scrollHeight; // Scroll to the bottom of the chat box
});

// Send a message to the server
document.querySelector('.message-form').addEventListener('submit', (e) => {
    e.preventDefault();
    const message = document.querySelector('input[name="message"]').value;
    socket.emit('message', { message, sender: userName, roomId });
    document.querySelector('input[name="message"]').value = ''; // Clear the input field
});

    </script>
</body>
</html>